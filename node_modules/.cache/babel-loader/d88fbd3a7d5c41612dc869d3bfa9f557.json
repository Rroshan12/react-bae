{"ast":null,"code":"import _slicedToArray from \"/Users/roshangp/Desktop/5gdt2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/roshangp/Desktop/5gdt2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/roshangp/Desktop/5gdt2/src/components/Cart.js\";\n\nimport React, { useReducer, useContext, createContext } from \"react\";\nvar CartStateContext = createContext();\nvar CartDispatchContext = createContext();\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD\":\n      return [].concat(_toConsumableArray(state), [action.item]);\n\n    case \"REMOVE\":\n      var newArr = _toConsumableArray(state);\n\n      newArr.splice(action.index, 1);\n      return newArr;\n\n    default:\n      throw new Error(\"unknown action \".concat(action.type));\n  }\n};\n\nexport var CartProvider = function CartProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(reducer, []),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return /*#__PURE__*/React.createElement(CartDispatchContext.Provider, {\n    value: dispatch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CartStateContext.Provider, {\n    value: state,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, children));\n};\nexport var useCart = function useCart() {\n  return useContext(CartStateContext);\n};\nexport var useDispatchCart = function useDispatchCart() {\n  return useContext(CartDispatchContext);\n};","map":{"version":3,"sources":["/Users/roshangp/Desktop/5gdt2/src/components/Cart.js"],"names":["React","useReducer","useContext","createContext","CartStateContext","CartDispatchContext","reducer","state","action","type","item","newArr","splice","index","Error","CartProvider","children","dispatch","useCart","useDispatchCart"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,aAAxC,QAA6D,OAA7D;AAEA,IAAMC,gBAAgB,GAAGD,aAAa,EAAtC;AACA,IAAME,mBAAmB,GAAGF,aAAa,EAAzC;;AAEA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,0CAAWF,KAAX,IAAkBC,MAAM,CAACE,IAAzB;;AACF,SAAK,QAAL;AACE,UAAMC,MAAM,sBAAOJ,KAAP,CAAZ;;AACAI,MAAAA,MAAM,CAACC,MAAP,CAAcJ,MAAM,CAACK,KAArB,EAA4B,CAA5B;AACA,aAAOF,MAAP;;AACF;AACE,YAAM,IAAIG,KAAJ,0BAA4BN,MAAM,CAACC,IAAnC,EAAN;AARJ;AAUD,CAXD;;AAaA,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC5C,oBAA0Bf,UAAU,CAACK,OAAD,EAAU,EAAV,CAApC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcU,QAAd;;AAEA,sBACE,oBAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEA,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEV,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,QADH,CADF,CADF;AAOD,CAVM;AAYP,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAMhB,UAAU,CAACE,gBAAD,CAAhB;AAAA,CAAhB;AACP,OAAO,IAAMe,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAMjB,UAAU,CAACG,mBAAD,CAAhB;AAAA,CAAxB","sourcesContent":["import React, { useReducer, useContext, createContext } from \"react\";\n\nconst CartStateContext = createContext();\nconst CartDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...state, action.item];\n    case \"REMOVE\":\n      const newArr = [...state];\n      newArr.splice(action.index, 1);\n      return newArr;\n    default:\n      throw new Error(`unknown action ${action.type}`);\n  }\n};\n\nexport const CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, []);\n\n  return (\n    <CartDispatchContext.Provider value={dispatch}>\n      <CartStateContext.Provider value={state}>\n        {children}\n      </CartStateContext.Provider>\n    </CartDispatchContext.Provider>\n  );\n};\n\nexport const useCart = () => useContext(CartStateContext);\nexport const useDispatchCart = () => useContext(CartDispatchContext);\n"]},"metadata":{},"sourceType":"module"}